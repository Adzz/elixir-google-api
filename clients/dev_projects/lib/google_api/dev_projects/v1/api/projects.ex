# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.DevProjects.V1.Api.Projects do
  @moduledoc """
  API calls for all endpoints tagged `Projects`.
  """

  alias GoogleApi.DevProjects.V1.Connection
  import GoogleApi.DevProjects.V1.RequestBuilder


  @doc """
  Deletes a resource.

  ## Parameters

  - connection (GoogleApi.DevProjects.V1.Connection): Connection to server
  - project_id (String): The Devconsole project ID.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :disable_authorization_check (Boolean): If set to true, authorization checks will be disabled for this request. This field is intended to be used as part of rolling out IAM authorization checks in the CRM Projects API. Initially, we will perform IAM authorization checks in the Projects API, but ignore the result and simply log differences between IAM and DevConsole authorization checks. Once we have confidence in IAM, we will enforce the IAM check authorization checks and use this field to disable authorization checking in DevConsole.
    - :whitelist_id (String): The whitelist project ID. See Projects.Insert.whitelist_id documentation for details.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec devprojects_projects_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def devprojects_projects_delete(connection, project_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"disableAuthorizationCheck" => :query,
      :"whitelistId" => :query
    }
    %{}
    |> method(:delete)
    |> url("/projects/#{project_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Converts a developer key into a project id.

  ## Parameters

  - connection (GoogleApi.DevProjects.V1.Connection): Connection to server
  - developer_key (String): The developer key
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :whitelist_id (String): The whitelist project ID. See Projects.Insert.whitelist_id documentation for details.

  ## Returns

  {:ok, %GoogleApi.DevProjects.V1.Model.ProjectsDeveloperKeyToProjectIdResponse{}} on success
  {:error, info} on failure
  """
  @spec devprojects_projects_developerkeytoprojectid(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.DevProjects.V1.Model.ProjectsDeveloperKeyToProjectIdResponse.t} | {:error, Tesla.Env.t}
  def devprojects_projects_developerkeytoprojectid(connection, developer_key, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"whitelistId" => :query
    }
    %{}
    |> method(:get)
    |> url("/projects/developerkey/#{developer_key}/toprojectid")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DevProjects.V1.Model.ProjectsDeveloperKeyToProjectIdResponse{})
  end

  @doc """
  Get a project.

  ## Parameters

  - connection (GoogleApi.DevProjects.V1.Connection): Connection to server
  - project_id (String): The Devconsole project ID.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :locale (String): The language code, country code and locale variant encoded as a single string. This is intended to be the locale for the end user, and hence the target of translations. Presence of the language code indicates that the response should include translation strings for the requested sections, as appropriate.
    - :retrieve_current_user_role (Boolean): Whether to also retrieve the role of the user for which the project is currently fetched
    - :section (List[String]): The list of sections that should be returned. By default, the API will only prefill the basic project data, since loading a project in its entirety can take relatively long and is often not needed.
    - :whitelist_id (String): The whitelist project ID. See Projects.Insert.whitelist_id documentation for details.

  ## Returns

  {:ok, %GoogleApi.DevProjects.V1.Model.ProjectData{}} on success
  {:error, info} on failure
  """
  @spec devprojects_projects_get(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.DevProjects.V1.Model.ProjectData.t} | {:error, Tesla.Env.t}
  def devprojects_projects_get(connection, project_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"locale" => :query,
      :"retrieveCurrentUserRole" => :query,
      :"section" => :query,
      :"whitelistId" => :query
    }
    %{}
    |> method(:get)
    |> url("/projects/#{project_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DevProjects.V1.Model.ProjectData{})
  end

  @doc """
  Obtain the structure of clients within the project for use in abuse control and takedowns.

  ## Parameters

  - connection (GoogleApi.DevProjects.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (ProjectsGetProjectClientStructureRequest): 

  ## Returns

  {:ok, %GoogleApi.DevProjects.V1.Model.ProjectsGetProjectClientStructureResponse{}} on success
  {:error, info} on failure
  """
  @spec devprojects_projects_getprojectclientstructure(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.DevProjects.V1.Model.ProjectsGetProjectClientStructureResponse.t} | {:error, Tesla.Env.t}
  def devprojects_projects_getprojectclientstructure(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/projects/getprojectclientstructure")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DevProjects.V1.Model.ProjectsGetProjectClientStructureResponse{})
  end

  @doc """
  Create a new project. Note that only the base data of a project will be transferred. Everything else needs to go through an update request.

  ## Parameters

  - connection (GoogleApi.DevProjects.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :initial_owner (String): Gaia id of the initial project owner. Currently,this should always be provided, but that might change in the future.
    - :retry_request (Boolean): Set to true to indicate that this is a retry request
    - :section (List[String]): The list of sections that should be created.
    - :whitelist_id (String): The whitelist project ID. See Projects.Insert.whitelist_id documentation for details.
    - :body (ProjectData): 

  ## Returns

  {:ok, %GoogleApi.DevProjects.V1.Model.ProjectData{}} on success
  {:error, info} on failure
  """
  @spec devprojects_projects_insert(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.DevProjects.V1.Model.ProjectData.t} | {:error, Tesla.Env.t}
  def devprojects_projects_insert(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"initialOwner" => :query,
      :"retryRequest" => :query,
      :"section" => :query,
      :"whitelistId" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/projects")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DevProjects.V1.Model.ProjectData{})
  end

  @doc """
  Query projects

  ## Parameters

  - connection (GoogleApi.DevProjects.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :fill_section (List[String]): Return projects with the following sections included if possible.
    - :include_non_active (Boolean): Whether also non-active projects should be included in results
    - :included_shard (List[String]): If this list is nonempty, projects are only returned if they contain some shard in the list. If the list is empty, no filtering occurs
    - :required_api_id (List[String]): Return only projects that have all the given APIs active
    - :required_section (List[String]): Return only projects that have all the given sections
    - :retrieve_current_user_role (Boolean): Whether to also retrieve the role of the user for which projects are currently listed
    - :user (String): Return only projects that the given user has access to. For now, this is always required. Later, this will be required for LOAS based access only, and we can infer the user from the access control. As such the user will need to be a team member of the project. Also the user might be logged as the initiator of the update.
    - :whitelist_id (String): The whitelist project ID. See Projects.Insert.whitelist_id documentation for details.

  ## Returns

  {:ok, %GoogleApi.DevProjects.V1.Model.ProjectsListResponse{}} on success
  {:error, info} on failure
  """
  @spec devprojects_projects_list(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.DevProjects.V1.Model.ProjectsListResponse.t} | {:error, Tesla.Env.t}
  def devprojects_projects_list(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"fillSection" => :query,
      :"includeNonActive" => :query,
      :"includedShard" => :query,
      :"requiredApiId" => :query,
      :"requiredSection" => :query,
      :"retrieveCurrentUserRole" => :query,
      :"user" => :query,
      :"whitelistId" => :query
    }
    %{}
    |> method(:get)
    |> url("/projects")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DevProjects.V1.Model.ProjectsListResponse{})
  end

  @doc """
  Uses DevConsole notification endpoint to notify project owners of important events, such as quota breaching. Currently only supports emailing the users of a project who fill the OWNER role, though there&#39;s been talk of adding support for other notification formats as well.

  ## Parameters

  - connection (GoogleApi.DevProjects.V1.Connection): Connection to server
  - projects_id (String): The resource ID.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :whitelist_id (String): The whitelist project ID. See Projects.Insert.whitelist_id documentation for details.
    - :body (ProjectsNotifyOwnersRequest): 

  ## Returns

  {:ok, %GoogleApi.DevProjects.V1.Model.ProjectsNotifyOwnersResponse{}} on success
  {:error, info} on failure
  """
  @spec devprojects_projects_notifyowners(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.DevProjects.V1.Model.ProjectsNotifyOwnersResponse.t} | {:error, Tesla.Env.t}
  def devprojects_projects_notifyowners(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"whitelistId" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/projects/#{projects_id}/notifyowners")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DevProjects.V1.Model.ProjectsNotifyOwnersResponse{})
  end

  @doc """
  Update a project. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.DevProjects.V1.Connection): Connection to server
  - project_id (String): The Devconsole project ID.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :section (List[String]): The list of sections that should be updated. Any parts of the project entity that are not listed here will not be considered for updates.
    - :user (String): If specified, the user to check accepted TOSes against. This is needed when an update (e.g., enabling the BigStore Apiary API requires the user to accept a specific ToS. In the future the nuser could be inferred from the access control.
    - :whitelist_id (String): The whitelist project ID. See Projects.Insert.whitelist_id documentation for details.
    - :body (ProjectData): 

  ## Returns

  {:ok, %GoogleApi.DevProjects.V1.Model.ProjectData{}} on success
  {:error, info} on failure
  """
  @spec devprojects_projects_patch(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.DevProjects.V1.Model.ProjectData.t} | {:error, Tesla.Env.t}
  def devprojects_projects_patch(connection, project_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"section" => :query,
      :"user" => :query,
      :"whitelistId" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/projects/#{project_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DevProjects.V1.Model.ProjectData{})
  end

  @doc """
  Looks-up a project specified via a string ID in app-engine app ID form and if found returns its numeric ID. Note: in the case of Dasher-based projects the string ID is in the form \&quot;domain:appId\&quot; (e.g., \&quot;google.com:cohesive-bonbon-301\&quot;) If the lookup fails a PROJECT_NOT_FOUND error is returned.

  ## Parameters

  - connection (GoogleApi.DevProjects.V1.Connection): Connection to server
  - project (String): The string project id to lookup
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :whitelist_id (String): The whitelist project ID. See Projects.Insert.whitelist_id documentation for details.

  ## Returns

  {:ok, %GoogleApi.DevProjects.V1.Model.ProjectsStringIdToNumericIdResponse{}} on success
  {:error, info} on failure
  """
  @spec devprojects_projects_stringidtonumericid(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.DevProjects.V1.Model.ProjectsStringIdToNumericIdResponse.t} | {:error, Tesla.Env.t}
  def devprojects_projects_stringidtonumericid(connection, project, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"whitelistId" => :query
    }
    %{}
    |> method(:get)
    |> url("/projects/stringid/#{project}/tonumericid")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DevProjects.V1.Model.ProjectsStringIdToNumericIdResponse{})
  end

  @doc """
  Undelete a project

  ## Parameters

  - connection (GoogleApi.DevProjects.V1.Connection): Connection to server
  - project_id (String): The resource ID.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :whitelist_id (String): The whitelist project ID. See Projects.Insert.whitelist_id documentation for details.
    - :body (ProjectsUndeleteRequest): 

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec devprojects_projects_undelete(Tesla.Env.client, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def devprojects_projects_undelete(connection, project_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"whitelistId" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/projects/#{project_id}/undelete")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Update a project.

  ## Parameters

  - connection (GoogleApi.DevProjects.V1.Connection): Connection to server
  - project_id (String): The Devconsole project ID.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :section (List[String]): The list of sections that should be updated. Any parts of the project entity that are not listed here will not be considered for updates.
    - :user (String): If specified, the user to check accepted TOSes against. This is needed when an update (e.g., enabling the BigStore Apiary API requires the user to accept a specific ToS. In the future the nuser could be inferred from the access control.
    - :whitelist_id (String): The whitelist project ID. See Projects.Insert.whitelist_id documentation for details.
    - :body (ProjectData): 

  ## Returns

  {:ok, %GoogleApi.DevProjects.V1.Model.ProjectData{}} on success
  {:error, info} on failure
  """
  @spec devprojects_projects_update(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.DevProjects.V1.Model.ProjectData.t} | {:error, Tesla.Env.t}
  def devprojects_projects_update(connection, project_id, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"section" => :query,
      :"user" => :query,
      :"whitelistId" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/projects/#{project_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.DevProjects.V1.Model.ProjectData{})
  end
end
