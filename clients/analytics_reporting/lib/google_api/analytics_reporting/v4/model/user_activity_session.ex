# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AnalyticsReporting.V4.Model.UserActivitySession do
  @moduledoc """
  This represents a user session performed on a specific device at a certain time over a period of time.

  ## Attributes

  - activities ([Activity]): Represents a detailed view into each of the activity in this session. Defaults to: `null`.
  - dataSource (String.t): The data source of a hit. By default, hits sent from analytics.js are reported as \&quot;web\&quot; and hits sent from the mobile SDKs are reported as \&quot;app\&quot;. These values can be overridden in the Measurement Protocol. Defaults to: `null`.
  - deviceCategory (String.t): The type of device used: \&quot;mobile\&quot;, \&quot;tablet\&quot; etc. Defaults to: `null`.
  - platform (String.t): Platform on which the activity happened: \&quot;android\&quot;, \&quot;ios\&quot; etc. Defaults to: `null`.
  - sessionDate (String.t): Date of this session in ISO-8601 format. Defaults to: `null`.
  - sessionId (String.t): Unique ID of the session. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :activities => list(GoogleApi.AnalyticsReporting.V4.Model.Activity.t()),
          :dataSource => any(),
          :deviceCategory => any(),
          :platform => any(),
          :sessionDate => any(),
          :sessionId => any()
        }

  field(:activities, as: GoogleApi.AnalyticsReporting.V4.Model.Activity, type: :list)
  field(:dataSource)
  field(:deviceCategory)
  field(:platform)
  field(:sessionDate)
  field(:sessionId)
end

defimpl Poison.Decoder, for: GoogleApi.AnalyticsReporting.V4.Model.UserActivitySession do
  def decode(value, options) do
    GoogleApi.AnalyticsReporting.V4.Model.UserActivitySession.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AnalyticsReporting.V4.Model.UserActivitySession do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
