# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudResourceManager.V1.Api.Projects do
  @moduledoc """
  API calls for all endpoints tagged `Projects`.
  """

  alias GoogleApi.CloudResourceManager.V1.Connection
  import GoogleApi.CloudResourceManager.V1.RequestBuilder


  @doc """
  Clears a &#x60;Policy&#x60; from a resource.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - projects_id (String): Part of &#x60;resource&#x60;. Name of the resource for the &#x60;Policy&#x60; to clear.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (ClearOrgPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_clear_org_policy(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.Empty.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_clear_org_policy(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{projects_id}:clearOrgPolicy")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.Empty{})
  end

  @doc """
  Request that a new Project be created. The result is an Operation which can be used to track the creation process. It is automatically deleted after a few hours, so there is no need to call DeleteOperation.  Our SLO permits Project creation to take up to 30 seconds at the 90th percentile. As of 2016-08-29, we are observing 6 seconds 50th percentile latency. 95th percentile latency is around 11 seconds. We recommend polling at the 5th second with an exponential backoff.  Authorization requires the Google IAM permission &#x60;resourcemanager.projects.create&#x60; on the specified parent for the new project.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (Project): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_create(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_create(connection, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.Operation{})
  end

  @doc """
  Marks the Project identified by the specified &#x60;project_id&#x60; (for example, &#x60;my-project-123&#x60;) for deletion. This method will only affect the Project if the following criteria are met:  + The Project does not have a billing account associated with it. + The Project has a lifecycle state of ACTIVE.  This method changes the Project&#39;s lifecycle state from ACTIVE to DELETE_REQUESTED. The deletion starts at an unspecified time, at which point the Project is no longer accessible.  Until the deletion completes, you can check the lifecycle state checked by retrieving the Project with GetProject, and the Project remains visible to ListProjects. However, you cannot update the project.  After the deletion completes, the Project is not retrievable by the  GetProject and ListProjects methods.  The caller must have modify permissions for this Project.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - project_id (String): The Project ID (for example, &#x60;foo-bar-123&#x60;).  Required.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_delete(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.Empty.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_delete(connection, project_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query
    }
    %{}
    |> method(:delete)
    |> url("/v1/projects/#{project_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.Empty{})
  end

  @doc """
  Retrieves the Project identified by the specified &#x60;project_id&#x60; (for example, &#x60;my-project-123&#x60;).  The caller must have read permissions for this Project.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - project_id (String): The Project ID (for example, &#x60;my-project-123&#x60;).  Required.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.Project{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_get(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.Project.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_get(connection, project_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/projects/#{project_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.Project{})
  end

  @doc """
  Gets a list of ancestors in the resource hierarchy for the Project identified by the specified &#x60;project_id&#x60; (for example, &#x60;my-project-123&#x60;).  The caller must have read permissions for this Project.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - project_id (String): The Project ID (for example, &#x60;my-project-123&#x60;).  Required.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (GetAncestryRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.GetAncestryResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_get_ancestry(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.GetAncestryResponse.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_get_ancestry(connection, project_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{project_id}:getAncestry")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.GetAncestryResponse{})
  end

  @doc """
  Gets the effective &#x60;Policy&#x60; on a resource. This is the result of merging &#x60;Policies&#x60; in the resource hierarchy. The returned &#x60;Policy&#x60; will not have an &#x60;etag&#x60;set because it is a computed &#x60;Policy&#x60; across multiple resources.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - projects_id (String): Part of &#x60;resource&#x60;. The name of the resource to start computing the effective &#x60;Policy&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (GetEffectiveOrgPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.OrgPolicy{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_get_effective_org_policy(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.OrgPolicy.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_get_effective_org_policy(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{projects_id}:getEffectiveOrgPolicy")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.OrgPolicy{})
  end

  @doc """
  Returns the IAM access control policy for the specified Project. Permission is denied if the policy or the resource does not exist.  Authorization requires the Google IAM permission &#x60;resourcemanager.projects.getIamPolicy&#x60; on the project

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - resource (String): REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (GetIamPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_get_iam_policy(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.Policy.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_get_iam_policy(connection, resource, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{resource}:getIamPolicy")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.Policy{})
  end

  @doc """
  Gets a &#x60;Policy&#x60; on a resource.  If no &#x60;Policy&#x60; is set on the resource, a &#x60;Policy&#x60; is returned with default values including &#x60;POLICY_TYPE_NOT_SET&#x60; for the &#x60;policy_type oneof&#x60;. The &#x60;etag&#x60; value can be used with &#x60;SetOrgPolicy()&#x60; to create or update a &#x60;Policy&#x60; during read-modify-write.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - projects_id (String): Part of &#x60;resource&#x60;. Name of the resource the &#x60;Policy&#x60; is set on.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (GetOrgPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.OrgPolicy{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_get_org_policy(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.OrgPolicy.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_get_org_policy(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{projects_id}:getOrgPolicy")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.OrgPolicy{})
  end

  @doc """
  Lists Projects that are visible to the user and satisfy the specified filter. This method returns Projects in an unspecified order. New Projects do not necessarily appear at the end of the list.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :filter (String): An expression for filtering the results of the request.  Filter rules are case insensitive. The fields eligible for filtering are:  + &#x60;name&#x60; + &#x60;id&#x60; + &lt;code&gt;labels.&lt;em&gt;key&lt;/em&gt;&lt;/code&gt; where *key* is the name of a label  Some examples of using labels as filters:  |Filter|Description| |------|-----------| |name:how*|The project&#39;s name starts with \&quot;how\&quot;.| |name:Howl|The project&#39;s name is &#x60;Howl&#x60; or &#x60;howl&#x60;.| |name:HOWL|Equivalent to above.| |NAME:howl|Equivalent to above.| |labels.color:*|The project has the label &#x60;color&#x60;.| |labels.color:red|The project&#39;s label &#x60;color&#x60; has the value &#x60;red&#x60;.| |labels.color:red&amp;nbsp;labels.size:big|The project&#39;s label &#x60;color&#x60; has the value &#x60;red&#x60; and its label &#x60;size&#x60; has the value &#x60;big&#x60;.  If you specify a filter that has both &#x60;parent.type&#x60; and &#x60;parent.id&#x60;, then the &#x60;resourcemanager.projects.list&#x60; permission is checked on the parent. If the user has this permission, all projects under the parent will be returned after remaining filters have been applied. If the user lacks this permission, then all projects for which the user has the &#x60;resourcemanager.projects.get&#x60; permission will be returned after remaining filters have been applied. If no filter is specified, the call will return projects for which the user has &#x60;resourcemanager.projects.get&#x60; permissions.  Optional.
    - :page_token (String): A pagination token returned from a previous call to ListProjects that indicates from where listing should continue.  Optional.
    - :page_size (Integer): The maximum number of Projects to return in the response. The server can return fewer Projects than requested. If unspecified, server picks an appropriate default.  Optional.

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.ListProjectsResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_list(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.ListProjectsResponse.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_list(connection, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"filter" => :query,
      :"pageToken" => :query,
      :"pageSize" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/projects")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.ListProjectsResponse{})
  end

  @doc """
  Lists &#x60;Constraints&#x60; that could be applied on the specified resource.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - projects_id (String): Part of &#x60;resource&#x60;. Name of the resource to list &#x60;Constraints&#x60; for.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (ListAvailableOrgPolicyConstraintsRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.ListAvailableOrgPolicyConstraintsResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_list_available_org_policy_constraints(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.ListAvailableOrgPolicyConstraintsResponse.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_list_available_org_policy_constraints(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{projects_id}:listAvailableOrgPolicyConstraints")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.ListAvailableOrgPolicyConstraintsResponse{})
  end

  @doc """
  Lists all the &#x60;Policies&#x60; set for a particular resource.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - projects_id (String): Part of &#x60;resource&#x60;. Name of the resource to list Policies for.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (ListOrgPoliciesRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.ListOrgPoliciesResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_list_org_policies(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.ListOrgPoliciesResponse.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_list_org_policies(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{projects_id}:listOrgPolicies")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.ListOrgPoliciesResponse{})
  end

  @doc """
  Sets the IAM access control policy for the specified Project. Replaces any existing policy.  The following constraints apply when using &#x60;setIamPolicy()&#x60;:  + Project does not support &#x60;allUsers&#x60; and &#x60;allAuthenticatedUsers&#x60; as &#x60;members&#x60; in a &#x60;Binding&#x60; of a &#x60;Policy&#x60;.  + The owner role can be granted only to &#x60;user&#x60; and &#x60;serviceAccount&#x60;.  + Service accounts can be made owners of a project directly without any restrictions. However, to be added as an owner, a user must be invited via Cloud Platform console and must accept the invitation.  + A user cannot be granted the owner role using &#x60;setIamPolicy()&#x60;. The user must be granted the owner role using the Cloud Platform Console and must explicitly accept the invitation.  + Invitations to grant the owner role cannot be sent using &#x60;setIamPolicy()&#x60;; they must be sent only using the Cloud Platform Console.  + Membership changes that leave the project without any owners that have accepted the Terms of Service (ToS) will be rejected.  + If the project is not part of an organization, there must be at least one owner who has accepted the Terms of Service (ToS) agreement in the policy. Calling &#x60;setIamPolicy()&#x60; to remove the last ToS-accepted owner from the policy will fail. This restriction also applies to legacy projects that no longer have owners who have accepted the ToS. Edits to IAM policies will be rejected until the lack of a ToS-accepting owner is rectified.  + Calling this method requires enabling the App Engine Admin API.  Note: Removing service accounts from policies or changing their roles can render services completely inoperable. It is important to understand how the service account is being used before removing or updating its roles.  Authorization requires the Google IAM permission &#x60;resourcemanager.projects.setIamPolicy&#x60; on the project

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - resource (String): REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (SetIamPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.Policy{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_set_iam_policy(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.Policy.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_set_iam_policy(connection, resource, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{resource}:setIamPolicy")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.Policy{})
  end

  @doc """
  Updates the specified &#x60;Policy&#x60; on the resource. Creates a new &#x60;Policy&#x60; for that &#x60;Constraint&#x60; on the resource if one does not exist.  Not supplying an &#x60;etag&#x60; on the request &#x60;Policy&#x60; results in an unconditional write of the &#x60;Policy&#x60;.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - projects_id (String): Part of &#x60;resource&#x60;. Resource name of the resource to attach the &#x60;Policy&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (SetOrgPolicyRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.OrgPolicy{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_set_org_policy(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.OrgPolicy.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_set_org_policy(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{projects_id}:setOrgPolicy")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.OrgPolicy{})
  end

  @doc """
  Returns permissions that a caller has on the specified Project.  There are no permissions required for making this API call.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - resource (String): REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (TestIamPermissionsRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.TestIamPermissionsResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_test_iam_permissions(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.TestIamPermissionsResponse.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_test_iam_permissions(connection, resource, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{resource}:testIamPermissions")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.TestIamPermissionsResponse{})
  end

  @doc """
  Restores the Project identified by the specified &#x60;project_id&#x60; (for example, &#x60;my-project-123&#x60;). You can only use this method for a Project that has a lifecycle state of DELETE_REQUESTED. After deletion starts, the Project cannot be restored.  The caller must have modify permissions for this Project.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - project_id (String): The project ID (for example, &#x60;foo-bar-123&#x60;).  Required.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (UndeleteProjectRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_undelete(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.Empty.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_undelete(connection, project_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{project_id}:undelete")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.Empty{})
  end

  @doc """
  Updates the attributes of the Project identified by the specified &#x60;project_id&#x60; (for example, &#x60;my-project-123&#x60;).  The caller must have modify permissions for this Project.

  ## Parameters

  - connection (GoogleApi.CloudResourceManager.V1.Connection): Connection to server
  - project_id (String): The project ID (for example, &#x60;my-project-123&#x60;).  Required.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (Project): 

  ## Returns

  {:ok, %GoogleApi.CloudResourceManager.V1.Model.Project{}} on success
  {:error, info} on failure
  """
  @spec cloudresourcemanager_projects_update(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudResourceManager.V1.Model.Project.t} | {:error, Tesla.Env.t}
  def cloudresourcemanager_projects_update(connection, project_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/v1/projects/#{project_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudResourceManager.V1.Model.Project{})
  end
end
