# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CustomerInteractionHistory.V3.Api.UserInteractions do
  @moduledoc """
  API calls for all endpoints tagged `UserInteractions`.
  """

  alias GoogleApi.CustomerInteractionHistory.V3.Connection
  import GoogleApi.CustomerInteractionHistory.V3.RequestBuilder


  @doc """
  Gets an interaction.

  ## Parameters

  - connection (GoogleApi.CustomerInteractionHistory.V3.Connection): Connection to server
  - entity_type (String): Represents the Type of the entity whose interaction will be returned. Possible Values: COMPANY, ADWORDS_CID, EMAIL, ADDRESS_DIGEST, GAIA_ID.
  - entity_id (String): Represents the Id of the Entity whose interaction will be returned.
  - timestamp (String): the timestamp of the interaction to be returned. It is measured as the number of microseconds since the Epoch.
  - interaction_type (String): The type of the interaction to be returned.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.

  ## Returns

  {:ok, %GoogleApi.CustomerInteractionHistory.V3.Model.UserInteraction{}} on success
  {:error, info} on failure
  """
  @spec cih_user_interactions_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.CustomerInteractionHistory.V3.Model.UserInteraction.t} | {:error, Tesla.Env.t}
  def cih_user_interactions_get(connection, entity_type, entity_id, timestamp, interaction_type, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query
    }
    %{}
    |> method(:get)
    |> url("/userInteractions/#{entity_type}/#{entity_id}/#{timestamp}/#{interaction_type}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CustomerInteractionHistory.V3.Model.UserInteraction{})
  end

  @doc """
  Inserts a new interaction to CIH.

  ## Parameters

  - connection (GoogleApi.CustomerInteractionHistory.V3.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :body (UserInteraction): 

  ## Returns

  {:ok, %GoogleApi.CustomerInteractionHistory.V3.Model.UserInteraction{}} on success
  {:error, info} on failure
  """
  @spec cih_user_interactions_insert(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.CustomerInteractionHistory.V3.Model.UserInteraction.t} | {:error, Tesla.Env.t}
  def cih_user_interactions_insert(connection, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/userInteractions/insert")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CustomerInteractionHistory.V3.Model.UserInteraction{})
  end

  @doc """
  Get a list of interactions for the given entity and its relatives if requested. The returned list is sorted by timestamp in descending order.

  ## Parameters

  - connection (GoogleApi.CustomerInteractionHistory.V3.Connection): Connection to server
  - entity (List[String]): List of entities to retrieve. At least one item must be present. Each item must be in &#39;ENTITY_TYPE:ENTITY_ID&#39; format which ENTITY_TYPE is COMPANY, ADWORDS_CID, EMAIL, ADDRESS_DIGEST or GAIA_ID.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String): Data format for the response.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :user_ip (String): IP address of the site where the request originates. Use this if you want to enforce per-user limits.
    - :entity_filter (List[String]): Primary or secondary entities, if available only interactions whose primary or secondary entities are given are returned. For info about the format of this field see the comments of UserInteractionsApiaryFilter proto.
    - :exclude_passed_interaction_origin (Boolean): Indicates the inclusive or exclusive behavior of interactionOrigin field. See the description of interactionOrigin.
    - :exclude_passed_interaction_type (Boolean): Indicates the inclusive or exclusive behavior of interactionType field. See the description of interactionType.
    - :include_related_interactions (Boolean): By default, all interactions which apply to any member of the entity structure which contains the provided entity are returned. If include_related_interactions is false, then only the interactions which are associated directly with this entity are returned, and neither parent_entity nor child_entities in the Entity object returned by this operation are populated.
    - :interaction_origin (List[String]): This limit is ignored if absent and all interactions regardless of their origin will be returned. Otherwise the meaning of this field depends on the include_interaction_origin field. 1. exclude_passed_interaction_origin is true: Only interactions whose Origin is contained in interaction_origin will be returned. 2. exclude_passed_interaction_origin is false: Only interactions whose Origin isn&#39;t contained in interaction_origin will be returned.
    - :interaction_type (List[String]): This limit is ignored if absent and all interactions regardless of their type will be returned. Otherwise the meaning of this field depends on the exclude_passed_interaction_type field. 1. exclude_passed_interaction_type is true: Only interactions whose Type is contained in interaction_type will be returned. 2. exclude_passed_interaction_type is false: Only interactions whose Type isn&#39;t contained in interaction_type will be returned.
    - :lookup_participant_info (Boolean): Request to get additional information about interaction participants, such as names, email addresses. May increase latency of this call.
    - :max_interactions_per_page (Integer): The limit on the number of returned interactions. This is the maximum number of interactions which will be returned, starting with the most recent. Thie default value is 100. If it is equal to zero then only the entity structure is returned.
    - :max_results (Integer): The maximum number of results per page.
    - :meta_type_filter (List[String]): Represents the interaction&#39;s classification. Possible values: SALES, SUPPORT, MARKETING. For more info see http://go/cih-gt-api
    - :min_main_entity_interactions (Integer): Attempt to read at least this many main entity interactions. The default value is set to 0. Pagination is disabled if a positive value is set.
    - :page_token (String): The pagination token.
    - :phone_matcher (List[String]): If available only interactions whose phone number is given are returned. For info about the format of this field see the comments of UserInteractionsApiaryFilter proto.
    - :timestamp_end (String): Upper limit on the timestamp for the returned interactions. It is measured as the number of microseconds since the Epoch.
    - :timestamp_start (String): Lower limit on the timestamp for the returned interactions. It is measured as the number of microseconds since the Epoch.

  ## Returns

  {:ok, %GoogleApi.CustomerInteractionHistory.V3.Model.UserInteractionsListResponse{}} on success
  {:error, info} on failure
  """
  @spec cih_user_interactions_list(Tesla.Env.client, list(String.t), keyword()) :: {:ok, GoogleApi.CustomerInteractionHistory.V3.Model.UserInteractionsListResponse.t} | {:error, Tesla.Env.t}
  def cih_user_interactions_list(connection, entity, opts \\ []) do
    optional_params = %{
      :"alt" => :query,
      :"fields" => :query,
      :"key" => :query,
      :"oauth_token" => :query,
      :"prettyPrint" => :query,
      :"quotaUser" => :query,
      :"userIp" => :query,
      :"entityFilter" => :query,
      :"excludePassedInteractionOrigin" => :query,
      :"excludePassedInteractionType" => :query,
      :"includeRelatedInteractions" => :query,
      :"interactionOrigin" => :query,
      :"interactionType" => :query,
      :"lookup_participant_info" => :query,
      :"maxInteractionsPerPage" => :query,
      :"maxResults" => :query,
      :"metaTypeFilter" => :query,
      :"minMainEntityInteractions" => :query,
      :"pageToken" => :query,
      :"phoneMatcher" => :query,
      :"timestampEnd" => :query,
      :"timestampStart" => :query
    }
    %{}
    |> method(:get)
    |> url("/userInteractions")
    |> add_param(:query, :"entity", entity)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CustomerInteractionHistory.V3.Model.UserInteractionsListResponse{})
  end
end
