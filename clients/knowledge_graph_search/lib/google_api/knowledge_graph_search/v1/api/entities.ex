# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.KnowledgeGraphSearch.V1.Api.Entities do
  @moduledoc """
  API calls for all endpoints tagged `Entities`.
  """

  alias GoogleApi.KnowledgeGraphSearch.V1.Connection
  import GoogleApi.KnowledgeGraphSearch.V1.RequestBuilder


  @doc """
  Searches Knowledge Graph for entities that match the constraints. A list of matched entities will be returned in response, which will be in JSON-LD format and compatible with http://schema.org

  ## Parameters

  - connection (GoogleApi.KnowledgeGraphSearch.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :prefix (Boolean): Enables prefix match against names and aliases of entities
    - :query (String): The literal query string for search.
    - :types (List[String]): Restricts returned entities with these types, e.g. Person (as defined in http://schema.org/Person). If multiple types are specified, returned entities will contain one or more of these types.
    - :indent (Boolean): Enables indenting of json results.
    - :languages (List[String]): The list of language codes (defined in ISO 693) to run the query with, e.g. &#39;en&#39;.
    - :ids (List[String]): The list of entity id to be used for search instead of query string. To specify multiple ids in the HTTP request, repeat the parameter in the URL as in ...?ids&#x3D;A&amp;ids&#x3D;B
    - :limit (Integer): Limits the number of entities to be returned.

  ## Returns

  {:ok, %GoogleApi.KnowledgeGraphSearch.V1.Model.SearchResponse{}} on success
  {:error, info} on failure
  """
  @spec kgsearch_entities_search(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.KnowledgeGraphSearch.V1.Model.SearchResponse.t} | {:error, Tesla.Env.t}
  def kgsearch_entities_search(connection, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"prefix" => :query,
      :"query" => :query,
      :"types" => :query,
      :"indent" => :query,
      :"languages" => :query,
      :"ids" => :query,
      :"limit" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/entities:search")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.KnowledgeGraphSearch.V1.Model.SearchResponse{})
  end
end
