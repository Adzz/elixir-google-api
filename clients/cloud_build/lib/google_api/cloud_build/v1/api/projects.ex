# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudBuild.V1.Api.Projects do
  @moduledoc """
  API calls for all endpoints tagged `Projects`.
  """

  alias GoogleApi.CloudBuild.V1.Connection
  import GoogleApi.CloudBuild.V1.RequestBuilder


  @doc """
  Cancels a requested build in progress.

  ## Parameters

  - connection (GoogleApi.CloudBuild.V1.Connection): Connection to server
  - project_id (String): ID of the project.
  - id (String): ID of the build.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (CancelBuildRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudBuild.V1.Model.Build{}} on success
  {:error, info} on failure
  """
  @spec cloudbuild_projects_builds_cancel(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.CloudBuild.V1.Model.Build.t} | {:error, Tesla.Env.t}
  def cloudbuild_projects_builds_cancel(connection, project_id, id, opts \\ []) do
    optional_params = %{
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{project_id}/builds/#{id}:cancel")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudBuild.V1.Model.Build{})
  end

  @doc """
  Starts a build with the specified configuration.  The long-running Operation returned by this method will include the ID of the build, which can be passed to GetBuild to determine its status (e.g., success or failure).

  ## Parameters

  - connection (GoogleApi.CloudBuild.V1.Connection): Connection to server
  - project_id (String): ID of the project.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (Build): 

  ## Returns

  {:ok, %GoogleApi.CloudBuild.V1.Model.Operation{}} on success
  {:error, info} on failure
  """
  @spec cloudbuild_projects_builds_create(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudBuild.V1.Model.Operation.t} | {:error, Tesla.Env.t}
  def cloudbuild_projects_builds_create(connection, project_id, opts \\ []) do
    optional_params = %{
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{project_id}/builds")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudBuild.V1.Model.Operation{})
  end

  @doc """
  Returns information about a previously requested build.  The Build that is returned includes its status (e.g., success or failure, or in-progress), and timing information.

  ## Parameters

  - connection (GoogleApi.CloudBuild.V1.Connection): Connection to server
  - project_id (String): ID of the project.
  - id (String): ID of the build.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.CloudBuild.V1.Model.Build{}} on success
  {:error, info} on failure
  """
  @spec cloudbuild_projects_builds_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.CloudBuild.V1.Model.Build.t} | {:error, Tesla.Env.t}
  def cloudbuild_projects_builds_get(connection, project_id, id, opts \\ []) do
    optional_params = %{
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/projects/#{project_id}/builds/#{id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudBuild.V1.Model.Build{})
  end

  @doc """
  Lists previously requested builds.  Previously requested builds may still be in-progress, or may have finished successfully or unsuccessfully.

  ## Parameters

  - connection (GoogleApi.CloudBuild.V1.Connection): Connection to server
  - project_id (String): ID of the project.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :filter (String): The raw filter text to constrain the results.
    - :page_token (String): Token to provide to skip to a particular spot in the list.
    - :page_size (Integer): Number of results to return in the list.

  ## Returns

  {:ok, %GoogleApi.CloudBuild.V1.Model.ListBuildsResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudbuild_projects_builds_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudBuild.V1.Model.ListBuildsResponse.t} | {:error, Tesla.Env.t}
  def cloudbuild_projects_builds_list(connection, project_id, opts \\ []) do
    optional_params = %{
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"filter" => :query,
      :"pageToken" => :query,
      :"pageSize" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/projects/#{project_id}/builds")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudBuild.V1.Model.ListBuildsResponse{})
  end

  @doc """
  Creates a new BuildTrigger.  This API is experimental.

  ## Parameters

  - connection (GoogleApi.CloudBuild.V1.Connection): Connection to server
  - project_id (String): ID of the project for which to configure automatic builds.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (BuildTrigger): 

  ## Returns

  {:ok, %GoogleApi.CloudBuild.V1.Model.BuildTrigger{}} on success
  {:error, info} on failure
  """
  @spec cloudbuild_projects_triggers_create(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudBuild.V1.Model.BuildTrigger.t} | {:error, Tesla.Env.t}
  def cloudbuild_projects_triggers_create(connection, project_id, opts \\ []) do
    optional_params = %{
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/projects/#{project_id}/triggers")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudBuild.V1.Model.BuildTrigger{})
  end

  @doc """
  Deletes an BuildTrigger by its project ID and trigger ID.  This API is experimental.

  ## Parameters

  - connection (GoogleApi.CloudBuild.V1.Connection): Connection to server
  - project_id (String): ID of the project that owns the trigger.
  - trigger_id (String): ID of the BuildTrigger to delete.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.CloudBuild.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec cloudbuild_projects_triggers_delete(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.CloudBuild.V1.Model.Empty.t} | {:error, Tesla.Env.t}
  def cloudbuild_projects_triggers_delete(connection, project_id, trigger_id, opts \\ []) do
    optional_params = %{
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query
    }
    %{}
    |> method(:delete)
    |> url("/v1/projects/#{project_id}/triggers/#{trigger_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudBuild.V1.Model.Empty{})
  end

  @doc """
  Gets information about a BuildTrigger.  This API is experimental.

  ## Parameters

  - connection (GoogleApi.CloudBuild.V1.Connection): Connection to server
  - project_id (String): ID of the project that owns the trigger.
  - trigger_id (String): ID of the BuildTrigger to get.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.CloudBuild.V1.Model.BuildTrigger{}} on success
  {:error, info} on failure
  """
  @spec cloudbuild_projects_triggers_get(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.CloudBuild.V1.Model.BuildTrigger.t} | {:error, Tesla.Env.t}
  def cloudbuild_projects_triggers_get(connection, project_id, trigger_id, opts \\ []) do
    optional_params = %{
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/projects/#{project_id}/triggers/#{trigger_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudBuild.V1.Model.BuildTrigger{})
  end

  @doc """
  Lists existing BuildTrigger.  This API is experimental.

  ## Parameters

  - connection (GoogleApi.CloudBuild.V1.Connection): Connection to server
  - project_id (String): ID of the project for which to list BuildTriggers.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.

  ## Returns

  {:ok, %GoogleApi.CloudBuild.V1.Model.ListBuildTriggersResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudbuild_projects_triggers_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudBuild.V1.Model.ListBuildTriggersResponse.t} | {:error, Tesla.Env.t}
  def cloudbuild_projects_triggers_list(connection, project_id, opts \\ []) do
    optional_params = %{
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/projects/#{project_id}/triggers")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudBuild.V1.Model.ListBuildTriggersResponse{})
  end

  @doc """
  Updates an BuildTrigger by its project ID and trigger ID.  This API is experimental.

  ## Parameters

  - connection (GoogleApi.CloudBuild.V1.Connection): Connection to server
  - project_id (String): ID of the project that owns the trigger.
  - trigger_id (String): ID of the BuildTrigger to update.
  - opts (KeywordList): [optional] Optional parameters
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :body (BuildTrigger): 

  ## Returns

  {:ok, %GoogleApi.CloudBuild.V1.Model.BuildTrigger{}} on success
  {:error, info} on failure
  """
  @spec cloudbuild_projects_triggers_patch(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.CloudBuild.V1.Model.BuildTrigger.t} | {:error, Tesla.Env.t}
  def cloudbuild_projects_triggers_patch(connection, project_id, trigger_id, opts \\ []) do
    optional_params = %{
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/v1/projects/#{project_id}/triggers/#{trigger_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudBuild.V1.Model.BuildTrigger{})
  end
end
