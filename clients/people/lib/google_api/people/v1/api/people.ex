# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.People.V1.Api.People do
  @moduledoc """
  API calls for all endpoints tagged `People`.
  """

  alias GoogleApi.People.V1.Connection
  import GoogleApi.People.V1.RequestBuilder


  @doc """
  Provides a list of the authenticated user&#39;s contacts merged with any connected profiles. &lt;br&gt; The request throws a 400 error if &#39;personFields&#39; is not specified.

  ## Parameters

  - connection (GoogleApi.People.V1.Connection): Connection to server
  - people_id (String): Part of &#x60;resourceName&#x60;. The resource name to return connections for. Only &#x60;people/me&#x60; is valid.
  - opts (KeywordList): [optional] Optional parameters
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :request_sync_token (Boolean): Whether the response should include a sync token, which can be used to get all changes since the last request.
    - :page_token (String): The token of the page to be returned.
    - :request_mask/include_field (String): **Required.** Comma-separated list of person fields to be included in the response. Each path should start with &#x60;person.&#x60;: for example, &#x60;person.names&#x60; or &#x60;person.photos&#x60;.
    - :page_size (Integer): The number of connections to include in the response. Valid values are between 1 and 2000, inclusive. Defaults to 100.
    - :sync_token (String): A sync token, returned by a previous call to &#x60;people.connections.list&#x60;. Only resources changed since the sync token was created will be returned.
    - :person_fields (String): **Required.** A field mask to restrict which fields on each person are returned. Valid values are:  * addresses * ageRanges * biographies * birthdays * braggingRights * coverPhotos * emailAddresses * events * genders * imClients * interests * locales * memberships * metadata * names * nicknames * occupations * organizations * phoneNumbers * photos * relations * relationshipInterests * relationshipStatuses * residences * skills * taglines * urls
    - :sort_order (String): The order in which the connections should be sorted. Defaults to &#x60;LAST_MODIFIED_ASCENDING&#x60;.

  ## Returns

  {:ok, %GoogleApi.People.V1.Model.ListConnectionsResponse{}} on success
  {:error, info} on failure
  """
  @spec people_people_connections_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.People.V1.Model.ListConnectionsResponse.t} | {:error, Tesla.Env.t}
  def people_people_connections_list(connection, people_id, opts \\ []) do
    optional_params = %{
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"requestSyncToken" => :query,
      :"pageToken" => :query,
      :"requestMask.includeField" => :query,
      :"pageSize" => :query,
      :"syncToken" => :query,
      :"personFields" => :query,
      :"sortOrder" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/people/#{people_id}/connections")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.People.V1.Model.ListConnectionsResponse{})
  end

  @doc """
  Create a new contact and return the person resource for that contact.

  ## Parameters

  - connection (GoogleApi.People.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :parent (String): The resource name of the owning person resource.
    - :body (Person): 

  ## Returns

  {:ok, %GoogleApi.People.V1.Model.Person{}} on success
  {:error, info} on failure
  """
  @spec people_people_create_contact(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.People.V1.Model.Person.t} | {:error, Tesla.Env.t}
  def people_people_create_contact(connection, opts \\ []) do
    optional_params = %{
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"parent" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v1/people:createContact")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.People.V1.Model.Person{})
  end

  @doc """
  Delete a contact person. Any non-contact data will not be deleted.

  ## Parameters

  - connection (GoogleApi.People.V1.Connection): Connection to server
  - people_id (String): Part of &#x60;resourceName&#x60;. The resource name of the contact to delete.
  - opts (KeywordList): [optional] Optional parameters
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.

  ## Returns

  {:ok, %GoogleApi.People.V1.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec people_people_delete_contact(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.People.V1.Model.Empty.t} | {:error, Tesla.Env.t}
  def people_people_delete_contact(connection, people_id, opts \\ []) do
    optional_params = %{
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query
    }
    %{}
    |> method(:delete)
    |> url("/v1/people/#{people_id}:deleteContact")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.People.V1.Model.Empty{})
  end

  @doc """
  Provides information about a person by specifying a resource name. Use &#x60;people/me&#x60; to indicate the authenticated user. &lt;br&gt; The request throws a 400 error if &#39;personFields&#39; is not specified.

  ## Parameters

  - connection (GoogleApi.People.V1.Connection): Connection to server
  - people_id (String): Part of &#x60;resourceName&#x60;. The resource name of the person to provide information about.  - To get information about the authenticated user, specify &#x60;people/me&#x60;. - To get information about a google account, specify  &#x60;people/&#x60;&lt;var&gt;account_id&lt;/var&gt;. - To get information about a contact, specify the resource name that   identifies the contact as returned by [&#x60;people.connections.list&#x60;](/people/api/rest/v1/people.connections/list).
  - opts (KeywordList): [optional] Optional parameters
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :person_fields (String): **Required.** A field mask to restrict which fields on the person are returned. Valid values are:  * addresses * ageRanges * biographies * birthdays * braggingRights * coverPhotos * emailAddresses * events * genders * imClients * interests * locales * memberships * metadata * names * nicknames * occupations * organizations * phoneNumbers * photos * relations * relationshipInterests * relationshipStatuses * residences * skills * taglines * urls
    - :request_mask/include_field (String): **Required.** Comma-separated list of person fields to be included in the response. Each path should start with &#x60;person.&#x60;: for example, &#x60;person.names&#x60; or &#x60;person.photos&#x60;.

  ## Returns

  {:ok, %GoogleApi.People.V1.Model.Person{}} on success
  {:error, info} on failure
  """
  @spec people_people_get(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.People.V1.Model.Person.t} | {:error, Tesla.Env.t}
  def people_people_get(connection, people_id, opts \\ []) do
    optional_params = %{
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"personFields" => :query,
      :"requestMask.includeField" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/people/#{people_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.People.V1.Model.Person{})
  end

  @doc """
  Provides information about a list of specific people by specifying a list of requested resource names. Use &#x60;people/me&#x60; to indicate the authenticated user. &lt;br&gt; The request throws a 400 error if &#39;personFields&#39; is not specified.

  ## Parameters

  - connection (GoogleApi.People.V1.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :request_mask/include_field (String): **Required.** Comma-separated list of person fields to be included in the response. Each path should start with &#x60;person.&#x60;: for example, &#x60;person.names&#x60; or &#x60;person.photos&#x60;.
    - :resource_names (List[String]): The resource names of the people to provide information about.  - To get information about the authenticated user, specify &#x60;people/me&#x60;. - To get information about a google account, specify   &#x60;people/&#x60;&lt;var&gt;account_id&lt;/var&gt;. - To get information about a contact, specify the resource name that   identifies the contact as returned by [&#x60;people.connections.list&#x60;](/people/api/rest/v1/people.connections/list).  You can include up to 50 resource names in one request.
    - :person_fields (String): **Required.** A field mask to restrict which fields on each person are returned. Valid values are:  * addresses * ageRanges * biographies * birthdays * braggingRights * coverPhotos * emailAddresses * events * genders * imClients * interests * locales * memberships * metadata * names * nicknames * occupations * organizations * phoneNumbers * photos * relations * relationshipInterests * relationshipStatuses * residences * skills * taglines * urls

  ## Returns

  {:ok, %GoogleApi.People.V1.Model.GetPeopleResponse{}} on success
  {:error, info} on failure
  """
  @spec people_people_get_batch_get(Tesla.Env.client, keyword()) :: {:ok, GoogleApi.People.V1.Model.GetPeopleResponse.t} | {:error, Tesla.Env.t}
  def people_people_get_batch_get(connection, opts \\ []) do
    optional_params = %{
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"requestMask.includeField" => :query,
      :"resourceNames" => :query,
      :"personFields" => :query
    }
    %{}
    |> method(:get)
    |> url("/v1/people:batchGet")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.People.V1.Model.GetPeopleResponse{})
  end

  @doc """
  Update contact data for an existing contact person. Any non-contact data will not be modified.  The request throws a 400 error if &#x60;updatePersonFields&#x60; is not specified. &lt;br&gt; The request throws a 400 error if &#x60;person.metadata.sources&#x60; is not specified for the contact to be updated. &lt;br&gt; The request throws a 412 error if &#x60;person.metadata.sources.etag&#x60; is different than the contact&#39;s etag, which indicates the contact has changed since its data was read. Clients should get the latest person and re-apply their updates to the latest person.

  ## Parameters

  - connection (GoogleApi.People.V1.Connection): Connection to server
  - people_id (String): Part of &#x60;person.resourceName&#x60;. The resource name for the person, assigned by the server. An ASCII string with a max length of 27 characters, in the form of &#x60;people/&#x60;&lt;var&gt;person_id&lt;/var&gt;.
  - opts (KeywordList): [optional] Optional parameters
    - :pp (Boolean): Pretty-print response.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :bearer_token (String): OAuth bearer token.
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :access_token (String): OAuth access token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :update_person_fields (String): **Required.** A field mask to restrict which fields on the person are updated. Valid values are:  * addresses * biographies * birthdays * braggingRights * emailAddresses * events * genders * imClients * interests * locales * names * nicknames * occupations * organizations * phoneNumbers * relations * residences * skills * urls
    - :body (Person): 

  ## Returns

  {:ok, %GoogleApi.People.V1.Model.Person{}} on success
  {:error, info} on failure
  """
  @spec people_people_update_contact(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.People.V1.Model.Person.t} | {:error, Tesla.Env.t}
  def people_people_update_contact(connection, people_id, opts \\ []) do
    optional_params = %{
      :"pp" => :query,
      :"oauth_token" => :query,
      :"bearer_token" => :query,
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"uploadType" => :query,
      :"fields" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"key" => :query,
      :"access_token" => :query,
      :"quotaUser" => :query,
      :"updatePersonFields" => :query,
      :"body" => :body
    }
    %{}
    |> method(:patch)
    |> url("/v1/people/#{people_id}:updateContact")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.People.V1.Model.Person{})
  end
end
