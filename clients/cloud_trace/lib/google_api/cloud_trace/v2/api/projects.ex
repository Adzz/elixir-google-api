# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudTrace.V2.Api.Projects do
  @moduledoc """
  API calls for all endpoints tagged `Projects`.
  """

  alias GoogleApi.CloudTrace.V2.Connection
  import GoogleApi.CloudTrace.V2.RequestBuilder


  @doc """
  Sends new spans to Stackdriver Trace or updates existing traces. If the name of a trace that you send matches that of an existing trace, new spans are added to the existing trace. Attempt to update existing spans results undefined behavior. If the name does not match, a new trace is created with given set of spans.

  ## Parameters

  - connection (GoogleApi.CloudTrace.V2.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. Required. Name of the project where the spans belong. The format is &#x60;projects/PROJECT_ID&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (BatchWriteSpansRequest): 

  ## Returns

  {:ok, %GoogleApi.CloudTrace.V2.Model.Empty{}} on success
  {:error, info} on failure
  """
  @spec cloudtrace_projects_traces_batch_write(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudTrace.V2.Model.Empty.t} | {:error, Tesla.Env.t}
  def cloudtrace_projects_traces_batch_write(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:post)
    |> url("/v2/projects/#{projects_id}/traces:batchWrite")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudTrace.V2.Model.Empty{})
  end

  @doc """
  Returns of a list of traces that match the specified filter conditions.

  ## Parameters

  - connection (GoogleApi.CloudTrace.V2.Connection): Connection to server
  - projects_id (String): Part of &#x60;parent&#x60;. Required. The project where the trace data is stored. The format is &#x60;projects/PROJECT_ID&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :filter (String): Opional. Return only traces that match this [trace filter](/trace/docs/trace-filters). Example:      \&quot;label:/http/url root:/_ah/background my_label:17\&quot;
    - :end_time (String): Optional. Do not return traces whose start time is later than this time.
    - :page_token (String): Optional. If present, then retrieve the next batch of results from the preceding call to this method.  &#x60;page_token&#x60; must be the value of &#x60;next_page_token&#x60; from the previous response.  The values of other method parameters should be identical to those in the previous call.
    - :start_time (String): Optional. Do not return traces whose end time is earlier than this time.
    - :page_size (Integer): Optional. The maximum number of results to return from this request. Non-positive values are ignored. The presence of &#x60;next_page_token&#x60; in the response indicates that more results might be available, even if fewer than the maximum number of results is returned by this request.
    - :order_by (String): Optional. A single field used to sort the returned traces. Only the following field names can be used:  *   &#x60;trace_id&#x60;: the trace&#39;s ID field *   &#x60;name&#x60;:  the root span&#39;s resource name *   &#x60;duration&#x60;: the difference between the root span&#39;s start time and end time *   &#x60;start&#x60;:  the start time of the root span  Sorting is in ascending order unless &#x60;desc&#x60; is appended to the sort field name. Example: &#x60;\&quot;name desc\&quot;&#x60;).

  ## Returns

  {:ok, %GoogleApi.CloudTrace.V2.Model.ListTracesResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudtrace_projects_traces_list(Tesla.Env.client, String.t, keyword()) :: {:ok, GoogleApi.CloudTrace.V2.Model.ListTracesResponse.t} | {:error, Tesla.Env.t}
  def cloudtrace_projects_traces_list(connection, projects_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"filter" => :query,
      :"endTime" => :query,
      :"pageToken" => :query,
      :"startTime" => :query,
      :"pageSize" => :query,
      :"orderBy" => :query
    }
    %{}
    |> method(:get)
    |> url("/v2/projects/#{projects_id}/traces")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudTrace.V2.Model.ListTracesResponse{})
  end

  @doc """
  Returns a list of spans within a trace.

  ## Parameters

  - connection (GoogleApi.CloudTrace.V2.Connection): Connection to server
  - projects_id (String): Part of &#x60;parent&#x60;. Required: The resource name of the trace containing the spans to list. The format is &#x60;projects/PROJECT_ID/traces/TRACE_ID&#x60;.
  - traces_id (String): Part of &#x60;parent&#x60;. See documentation of &#x60;projectsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :page_token (String): Optional. If present, then retrieve the next batch of results from the preceding call to this method. &#x60;page_token&#x60; must be the value of &#x60;next_page_token&#x60; from the previous response. The values of other method parameters should be identical to those in the previous call.

  ## Returns

  {:ok, %GoogleApi.CloudTrace.V2.Model.ListSpansResponse{}} on success
  {:error, info} on failure
  """
  @spec cloudtrace_projects_traces_list_spans(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, GoogleApi.CloudTrace.V2.Model.ListSpansResponse.t} | {:error, Tesla.Env.t}
  def cloudtrace_projects_traces_list_spans(connection, projects_id, traces_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"pageToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/v2/projects/#{projects_id}/traces/#{traces_id}:listSpans")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudTrace.V2.Model.ListSpansResponse{})
  end

  @doc """
  Creates a new Span.

  ## Parameters

  - connection (GoogleApi.CloudTrace.V2.Connection): Connection to server
  - projects_id (String): Part of &#x60;name&#x60;. The resource name of the span in the following format:      projects/[PROJECT_ID]traces/[TRACE_ID]/spans/SPAN_ID is a unique identifier for a trace within a project. [SPAN_ID] is a unique identifier for a span within a trace, assigned when the span is created.
  - traces_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - spans_id (String): Part of &#x60;name&#x60;. See documentation of &#x60;projectsId&#x60;.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :pretty_print (Boolean): Returns response with indentations and line breaks.
    - :fields (String): Selector specifying which fields to include in a partial response.
    - :upload_type (String): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :__/xgafv (String): V1 error format.
    - :callback (String): JSONP
    - :alt (String): Data format for response.
    - :access_token (String): OAuth access token.
    - :key (String): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quota_user (String): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (Boolean): Pretty-print response.
    - :bearer_token (String): OAuth bearer token.
    - :oauth_token (String): OAuth 2.0 token for the current user.
    - :body (Span): 

  ## Returns

  {:ok, %GoogleApi.CloudTrace.V2.Model.Span{}} on success
  {:error, info} on failure
  """
  @spec cloudtrace_projects_traces_spans_create(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, GoogleApi.CloudTrace.V2.Model.Span.t} | {:error, Tesla.Env.t}
  def cloudtrace_projects_traces_spans_create(connection, projects_id, traces_id, spans_id, opts \\ []) do
    optional_params = %{
      :"upload_protocol" => :query,
      :"prettyPrint" => :query,
      :"fields" => :query,
      :"uploadType" => :query,
      :"$.xgafv" => :query,
      :"callback" => :query,
      :"alt" => :query,
      :"access_token" => :query,
      :"key" => :query,
      :"quotaUser" => :query,
      :"pp" => :query,
      :"bearer_token" => :query,
      :"oauth_token" => :query,
      :"body" => :body
    }
    %{}
    |> method(:put)
    |> url("/v2/projects/#{projects_id}/traces/#{traces_id}/spans/#{spans_id}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.CloudTrace.V2.Model.Span{})
  end
end
